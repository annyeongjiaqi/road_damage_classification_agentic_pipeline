name: Sync to CodeCommit via HTTPS

on:
  push:
    branches:
      - main  # Trigger only when main branch is pushed

jobs:
  push-to-codecommit:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout GitHub repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Fetch full history

      - name: Set Git identity
        run: |
          git config --global user.name "LTA_Intern_Jiaqi_CLI"
          git config --global user.email "intern.jiaqi@lta.gov.sg"

      - name: Validate secrets
        run: |
          if [ -z "${{ secrets.CODECOMMIT_USERNAME }}" ]; then
            echo "Error: CODECOMMIT_USERNAME secret is not set"
            exit 1
          fi
          if [ -z "${{ secrets.CODECOMMIT_PASSWORD }}" ]; then
            echo "Error: CODECOMMIT_PASSWORD secret is not set"
            exit 1
          fi
          echo "Secrets validation passed"

      - name: Set CodeCommit remote with credentials
        run: |
          # Remove any existing codecommit remote
          git remote remove codecommit 2>/dev/null || true
          
          # URL encode the credentials to handle special characters
          USERNAME=$(echo -n "${{ secrets.CODECOMMIT_USERNAME }}" | python3 -c "import sys, urllib.parse; print(urllib.parse.quote(sys.stdin.read().strip()))")
          PASSWORD=$(echo -n "${{ secrets.CODECOMMIT_PASSWORD }}" | python3 -c "import sys, urllib.parse; print(urllib.parse.quote(sys.stdin.read().strip()))")
          
          # Add CodeCommit remote with URL-encoded credentials
          git remote add codecommit "https://${USERNAME}:${PASSWORD}@git-codecommit.ap-southeast-1.amazonaws.com/v1/repos/ROAD_DAMAGE_LTA"
          
          # Verify remote was added successfully (without showing credentials)
          echo "CodeCommit remote added successfully"

      - name: Push to CodeCommit
        run: |
          # Check if repository is shallow and only unshallow if needed
          if [ -f .git/shallow ]; then
            echo "Repository is shallow, fetching complete history..."
            git fetch --unshallow
          else
            echo "Repository already has complete history"
          fi
          
          # Push to CodeCommit with error handling
          echo "Attempting to push to CodeCommit..."
          if git push codecommit main --force; then
            echo "Successfully pushed to CodeCommit"
          else
            echo "Failed to push to CodeCommit. Debugging information:"
            echo "Git status:"
            git status
            echo "Checking connectivity to CodeCommit..."
            curl -I https://git-codecommit.ap-southeast-1.amazonaws.com/ || echo "Could not reach CodeCommit endpoint"
            exit 1
          fi